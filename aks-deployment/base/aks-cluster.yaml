apiVersion: containerservice.azure.com/v1api20210501
kind: ManagedCluster
metadata:
  name: $(cluster_config.cluster_name)
  namespace: $(cluster_config.namespace)
  labels:
    azure-resource: managed-cluster
    azure-location: $(cluster_config.azure_region)
    managed-by: azure-service-operator
    istio-enabled: "$(cluster_config.istio_enabled)"
    validation-mode: dry-run
spec:
  azureName: $(cluster_config.cluster_name)
  location: $(cluster_config.azure_region)
  owner:
    name: $(cluster_config.resource_group_name)
  operatorSpec:
    configMaps:
      oidcIssuerProfile:
        name: aks-oidc-config-$(cluster_config.name_suffix)
        key: issuer-url
  dnsPrefix: $(cluster_config.cluster_name)k8s
  kubernetesVersion: "$(cluster_config.k8s_version)"
  linuxProfile:
    adminUsername: localadmin
    ssh:
      publicKeys:
        - keyData: $(cluster_config.ssh_public_key)
  # Node provisioning with auto mode (NAP)
  nodeProvisioningProfile:
    mode: Auto
  # Identity Configuration
  identity:
    type: UserAssigned
    userAssignedIdentities:
    - reference:
        armId: /subscriptions/$(cluster_config.subscription_id)/resourceGroups/$(cluster_config.resource_group_name)/providers/Microsoft.ManagedIdentity/userAssignedIdentities/$(cluster_config.control_plane_managed_identity_name)
  # AAD and RBAC Configuration
  aadProfile:
    enableAzureRBAC: true
    managed: true
    adminGroupObjectIDs:
    - $(cluster_config.admin_group_object_id)
  enableRBAC: true
  disableLocalAccounts: true
  # Network Profile
  networkProfile:
      networkPlugin: azure
      networkPluginMode: overlay
      networkPolicy: cilium
      networkDataplane: cilium
      serviceCidr: $(cluster_config.service_cidr)
      dnsServiceIP: $(cluster_config.dns_service_ip)
      podCidr: $(cluster_config.pod_cidr)
      ipFamilies: ["IPv4"]
      loadBalancerSku: standard
      outboundType: userDefinedRouting
 
  # API Server Access
  apiServerAccessProfile:
    enablePrivateCluster: true
    enablePrivateClusterPublicFQDN: true
    privateDNSZone: none
    disableRunCommand: true
  agentPoolProfiles:
  - name: systempool
    vnetSubnetReference:
      armId: $(cluster_config.vnet_subnet_reference)
    mode: System
    count: $(cluster_config.system_node_count)
    enableAutoScaling: $(cluster_config.enable_auto_scaling)
    vmSize: $(cluster_config.system_node_vm_size)
    availabilityZones: $(cluster_config.availability_zones)
    osDiskType: Managed
    osDiskSizeGB: $(cluster_config.os_disk_size_gb)
    osType: Linux
    osSKU: AzureLinux
    maxPods: $(cluster_config.max_pods_per_node)
    enableNodePublicIP: false
    enableEncryptionAtHost: false
    securityProfile:
      enableSecureBoot: true
      enableVTPM: true
      sshAccess: Disabled
  identityProfile:
    kubeletidentity:
      clientId: $(cluster_config.kubelet_identity_client_id)
      objectId: $(cluster_config.kubelet_identity_object_id)
      resourceReference:
        armId: /subscriptions/$(cluster_config.subscription_id)/resourceGroups/$(cluster_config.resource_group_name)/providers/Microsoft.ManagedIdentity/userAssignedIdentities/$(cluster_config.kubelet_managed_identity_name)
  # Auto Upgrade Configuration
  autoUpgradeProfile:
    upgradeChannel: $(cluster_config.upgrade_channel)
    nodeOSUpgradeChannel: $(cluster_config.node_os_upgrade_channel)
  # Security Profile
  securityProfile:
    defender:
      logAnalyticsWorkspaceResourceReference:
        armId: $(cluster_config.log_analytics_workspace_id)
      securityMonitoring:
        enabled: true
    workloadIdentity:
      enabled: true
    imageCleaner:
      enabled: true
      intervalHours: $(cluster_config.image_cleaner_interval_hours)
  # Storage Profile
  storageProfile:
    diskCSIDriver:
      enabled: true
    fileCSIDriver:
      enabled: true
    snapshotController:
      enabled: true
  # Addon Profiles
  addonProfiles:
    azureKeyvaultSecretsProvider:
      enabled: true
      config:
        enableSecretRotation: "true"
        rotationPollInterval: "$(cluster_config.secret_rotation_interval)"
    azurepolicy:
      enabled: true
      config:
        version: "v2"
  # Monitoring and Metrics  
  azureMonitorProfile:
    metrics:
      enabled: $(cluster_config.enable_azure_monitor_metrics)
      kubeStateMetrics:
        metricLabelsAllowlist: "$(cluster_config.metric_labels_allowlist)"
    # Container Insights Configuration
    containerInsights:
      enabled: $(cluster_config.enable_container_insights)
      logAnalyticsWorkspaceResourceId: 
        armId: $(cluster_config.azure_monitor_workspace_id)
  # Cluster SKU and Support
  sku:
    name: $(cluster_config.cluster_sku_name)
    tier: $(cluster_config.cluster_sku_tier)
  supportPlan: $(cluster_config.support_plan)
  # Workload Auto Scaler with KEDA
  workloadAutoScalerProfile:
    keda:
      enabled: $(cluster_config.enable_keda)
  # OIDC Issuer - Required for workload identity
  oidcIssuerProfile:
    enabled: true
  serviceMeshProfile:
    mode: $(cluster_config.service_mesh_mode)
    istio:
      components:
        ingressGateways:
          - enabled: $(cluster_config.enable_istio_ingress)
            mode: $(cluster_config.istio_ingress_mode)
      revisions:
        - $(cluster_config.istio_revision)
  podIdentityProfile:
    enabled: false
    userAssignedIdentityExceptions:
        - name: k8s-control-plane-exception
          namespace: kube-system
          podLabels:
            kubernetes.azure.com/managedby: aks
  # Resource group for node resources
  nodeResourceGroup: $(cluster_config.node_resource_group)
  # Service Principal Profile
  servicePrincipalProfile:
    clientId: msi
  # Tags
  tags:
    environment: $(cluster_config.environment)
    project: $(cluster_config.project)
    costCenter: $(cluster_config.cost_center)
    managedBy: $(cluster_config.managed_by)    
    billingReference: $(cluster_config.billing_reference)
    opEnvironment: $(cluster_config.op_environment)
    cmdbReference: $(cluster_config.cmdb_reference)
    Owner: $(cluster_config.owner)
    Status: $(cluster_config.status)
    Team: $(cluster_config.team)
    DeployedBy: $(cluster_config.deployed_by)
  privateLinkResources:
    - reference:
        armId: /subscriptions/$(cluster_config.subscription_id)/resourcegroups/$(cluster_config.resource_group_name)/providers/Microsoft.ContainerService/managedClusters/$(cluster_config.cluster_name)/privateLinkResources/management
