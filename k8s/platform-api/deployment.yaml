apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform-api
  namespace: platform-system
  labels:
    app: platform-api
    component: api
    version: v1.1.0
    platform.io/secrets-source: external-secrets
    platform.io/security-level: high
spec:
  replicas: 2
  selector:
    matchLabels:
      app: platform-api
      component: api
  template:
    metadata:
      labels:
        app: platform-api
        component: api
        version: v1.1.0
        platform.io/secrets-source: external-secrets
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
        platform.io/external-secrets: "required"
        platform.io/last-deployed: "$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
        platform.io/updated-features: "kubernetes-api-argo-workflows,external-secrets"
    spec:
      serviceAccountName: platform-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: platform-api
          image: davidgardiner/platform-api:v1.1.0
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: platform-api-config
                  key: NODE_ENV
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: platform-api-config
                  key: PORT
            - name: CORS_ORIGINS
              valueFrom:
                configMapKeyRef:
                  name: platform-api-config
                  key: CORS_ORIGINS
            - name: KUBE_CONTEXT
              value: "" # Will use in-cluster config
            - name: KUBE_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: platform-api-config
                  key: KUBE_NAMESPACE
            # JWT and Authentication Secrets (from External Secrets/Azure Key Vault)
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: platform-api-secrets
                  key: JWT_SECRET
            - name: AZURE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: platform-api-secrets
                  key: AZURE_CLIENT_ID
            - name: AZURE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: platform-api-secrets
                  key: AZURE_CLIENT_SECRET
            - name: AZURE_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: platform-api-secrets
                  key: AZURE_TENANT_ID
            # Database Secrets (from External Secrets/Azure Key Vault)
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: platform-db-connection
                  key: DATABASE_URL
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: platform-api-secrets
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: platform-api-secrets
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: platform-api-secrets
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: platform-api-secrets
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: platform-api-secrets
                  key: DB_PASSWORD
            # Redis Configuration
            - name: REDIS_URL
              value: "redis://localhost:6379" # Update this for your Redis instance
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: platform-api-secrets
                  key: REDIS_PASSWORD
                  optional: true
            # Additional Security Keys
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: platform-api-secrets
                  key: ENCRYPTION_KEY
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: platform-api-secrets
                  key: API_KEY
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: platform-api-config
                  key: LOG_LEVEL
            - name: LOG_FORMAT
              valueFrom:
                configMapKeyRef:
                  name: platform-api-config
                  key: LOG_FORMAT
            - name: PLATFORM_COST_TRACKING
              valueFrom:
                configMapKeyRef:
                  name: platform-api-config
                  key: PLATFORM_COST_TRACKING
            - name: DB_SSL
              valueFrom:
                configMapKeyRef:
                  name: platform-api-config
                  key: DB_SSL
            - name: RATE_LIMIT_MAX_REQUESTS
              valueFrom:
                configMapKeyRef:
                  name: platform-api-config
                  key: RATE_LIMIT_MAX_REQUESTS
            - name: RATE_LIMIT_WINDOW_MS
              valueFrom:
                configMapKeyRef:
                  name: platform-api-config
                  key: RATE_LIMIT_WINDOW_MS
            # Argo Workflows Configuration
            - name: ARGO_WORKFLOWS_URL
              valueFrom:
                configMapKeyRef:
                  name: platform-api-config
                  key: ARGO_WORKFLOWS_URL
            - name: ARGO_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: platform-api-config
                  key: ARGO_NAMESPACE
            - name: ARGO_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: platform-api-config
                  key: ARGO_TIMEOUT
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
              ephemeral-storage: "1Gi"
            limits:
              memory: "512Mi"
              cpu: "500m"
              ephemeral-storage: "2Gi"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false # Set to true when app supports it
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10 # Increased for External Secrets sync time
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          # Startup probe to handle External Secrets synchronization delay
          startupProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 12 # Allow 1 minute for startup and secrets sync
          volumeMounts:
            - name: logs
              mountPath: /app/logs
            - name: tmp
              mountPath: /tmp
            - name: var-cache
              mountPath: /var/cache
      volumes:
        - name: logs
          emptyDir:
            sizeLimit: "1Gi"
        - name: tmp
          emptyDir:
            sizeLimit: "500Mi"
        - name: var-cache
          emptyDir:
            sizeLimit: "500Mi"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
