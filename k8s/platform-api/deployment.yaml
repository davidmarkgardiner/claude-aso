apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform-api
  namespace: platform-system
  labels:
    app: platform-api
    component: api
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: platform-api
      component: api
  template:
    metadata:
      labels:
        app: platform-api
        component: api
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: platform-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: platform-api
        image: platform-api:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: platform-api-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: platform-api-config
              key: PORT
        - name: KUBE_CONTEXT
          value: ""  # Will use in-cluster config
        - name: KUBE_NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: platform-api-config
              key: KUBE_NAMESPACE
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: platform-api-secrets
              key: JWT_SECRET
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: platform-api-config
              key: LOG_LEVEL
        - name: LOG_FORMAT
          valueFrom:
            configMapKeyRef:
              name: platform-api-config
              key: LOG_FORMAT
        - name: PLATFORM_COST_TRACKING
          valueFrom:
            configMapKeyRef:
              name: platform-api-config
              key: PLATFORM_COST_TRACKING
        - name: DB_SSL
          valueFrom:
            configMapKeyRef:
              name: platform-api-config
              key: DB_SSL
        - name: RATE_LIMIT_MAX_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: platform-api-config
              key: RATE_LIMIT_MAX_REQUESTS
        - name: RATE_LIMIT_WINDOW_MS
          valueFrom:
            configMapKeyRef:
              name: platform-api-config
              key: RATE_LIMIT_WINDOW_MS
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30