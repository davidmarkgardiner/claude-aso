{"type":"entity","name":"eks-crossplane-atlas-cluster-context","entityType":"cluster-fingerprint","observations":["EKS cluster with Crossplane AWS provider v1beta3","Atlas operator in atlas-operator namespace for schema management","DevOpsToolkit application platform with App/AppClaim CRDs","Requires VPC with internet gateway for public RDS access","Cluster uses 192.168.x.x internal networking"]}
{"type":"entity","name":"aws-rds-crossplane-api-patterns","entityType":"api-reference","observations":["AWS RDS Instance v1beta3: use writeConnectionSecretToRef (singular, not plural)","PostgreSQL engine version: use '15' not '15.4' for AWS RDS compatibility","VPC references: use vpcSecurityGroupIdRefs and dbSubnetGroupNameRef","Internet Gateway: attach directly to VPC using vpcIdRef in IGW spec","Required VPC infrastructure: VPC, IGW, Subnets, Security Group, Route Table with 0.0.0.0/0 route"]}
{"type":"entity","name":"atlas-schema-connection-patterns","entityType":"configuration-pattern","observations":["Atlas credentials: use 'host' key from connection secret, NOT 'endpoint' (avoids :5432:5432 error)","Connection secret keys: host, username, password, port (separate fields)","Policy settings: set destructive.error=false and skip modify_schema=true for permissive deployment","txMode: use 'none' for PostgreSQL compatibility"]}
{"type":"entity","name":"database-deployment-prevention-checklist","entityType":"prevention-guide","observations":["CRITICAL: Ensure database is completely clean before Atlas schema deployment","Remove any manually created tables/data that could cause schema state mismatch","Verify DNS resolution from cluster pods to external RDS endpoints","Test TCP connectivity (port 5432) before deploying Atlas schema","Always restart Atlas operator pod if connection issues persist"]}
{"type":"entity","name":"common-database-issues-resolutions","entityType":"troubleshooting-guide","observations":["VPC Error 'no internet gateway': Create IGW with vpcIdRef and route table with 0.0.0.0/0 route","Atlas ':5432:5432' error: Use 'host' key instead of 'endpoint' from connection secret","Atlas schema state mismatch: Clean database of any manual tables/data before deployment","PostgreSQL version not found: Use supported versions like '15' instead of '15.4'","Atlas DNS resolution failed: Restart Atlas operator pod and verify cluster networking"]}
{"type":"entity","name":"eks-crossplane-deletion-prevention","entityType":"prevention-guide","observations":["CRITICAL: Delete Atlas schema before RDS instance to avoid orphaned schema references","Always use YAML manifests for DevOpsToolkit platform - label-based deletion misses composed resources","VPC infrastructure can be deleted immediately after RDS - no dependency wait needed","If RDS deletion hangs: Check AWS console for deletion protection or backup retention","Stuck VPC deletion usually means RDS still has ENI attachments"]}
{"type":"entity","name":"azure-postgresql-crossplane-deployment","entityType":"cluster-fingerprint","observations":["Azure PostgreSQL FlexibleServer v1beta2 with Crossplane provider","Atlas schema management with db.atlasgo.io/v1alpha1 CRDs","Supports auto-generated passwords and connection secrets","Typical deployment time: 5-10 minutes for PostgreSQL server provisioning"]}
{"type":"entity","name":"azure-postgresql-auth-pattern","entityType":"troubleshooting-guide","observations":["Azure PostgreSQL connection issue: username should be 'postgres' not 'postgres@servername'","Crossplane connection secret provides username as 'postgres@servername' but actual connection needs 'postgres'","Password authentication works with simplified username format","This is specific to Azure PostgreSQL FlexibleServer authentication"]}
{"type":"entity","name":"atlas-schemas-field-correction","entityType":"troubleshooting-guide","observations":["CRITICAL: Atlas 'schemas' field specifies PostgreSQL schema namespaces, not database names","Incorrect: schemas: [my-db-01] - tries to manage a schema named 'my-db-01'","Correct: schemas: [public] - manages the 'public' schema namespace","Delete and recreate Atlas resources after schema field changes for proper application","Atlas logs may show 'applied: 0' even when tables are successfully created"]}
{"type":"entity","name":"azure-postgres-api-error","entityType":"api-reference","observations":["Azure PostgreSQL FlexibleServer v1beta2 API error","Unknown field: spec.forProvider.authentication[0].passwordAuthEnabled","Need to check correct authentication field structure","Use kubectl explain flexibleservers.spec.forProvider.authentication for correct fields"]}
{"type":"entity","name":"azure-postgres-auth-fix","entityType":"api-reference","observations":["Azure PostgreSQL FlexibleServer authentication field correction","Use authentication: {passwordAuthEnabled: true} not array format","Resolved: authentication should be object not array of objects"]}
{"type":"entity","name":"azure-resource-group-error","entityType":"troubleshooting-guide","observations":["Issue: Azure PostgreSQL FlexibleServer creation failed","Symptom: ResourceGroupNotFound: Resource group 'dot' could not be found","Root cause: Resource group 'dot' does not exist in Azure subscription","Resolution: Need to check and use existing resource group or create one","Prevention: Always verify resource group exists before deploying Azure resources"]}
{"type":"entity","name":"azure-resource-group-fix","entityType":"prevention-guide","observations":["Issue: Azure resources need existing resource group","Prevention: Always create ResourceGroup first before other Azure resources","Pattern: Use resourceGroupNameRef instead of hardcoded string","Resolution: Create ResourceGroup with unique name, then reference it in other resources"]}
{"type":"entity","name":"azure-postgres-auth-issue","entityType":"troubleshooting-guide","observations":["Issue: Atlas schema deployment failed","Symptom: password authentication failed for user 'dbadmin@my-db-server'","Root cause: Azure PostgreSQL username format - should use 'dbadmin' not 'dbadmin@my-db-server'","Resolution: Remove @servername from username in connection URL","Prevention: Use username 'dbadmin' not 'dbadmin@servername' for Azure PostgreSQL"]}
{"type":"entity","name":"postgres-on-conflict-error","entityType":"troubleshooting-guide","observations":["Issue: Atlas schema deployment failed","Symptom: 'no unique or exclusion constraint matching the ON CONFLICT specification'","Root cause: ON CONFLICT clause used without unique constraint on specified column","Resolution: Add UNIQUE constraint or use ON CONFLICT DO NOTHING without column specification","Prevention: Ensure table has unique constraints before using ON CONFLICT with specific columns"]}
{"type":"entity","name":"azure-postgres-atlas-success","entityType":"prevention-guide","observations":["Successfully deployed Azure PostgreSQL with Atlas schema management","Key lessons: Use 'dbadmin' not 'dbadmin@servername' for Azure PostgreSQL auth","Schema management: Create separate secret for Atlas connection URLs","ON CONFLICT: Use general 'ON CONFLICT DO NOTHING' to avoid constraint errors","Resource order: Create ResourceGroup first, then PostgreSQL server, then databases, then schemas"]}
{"type":"entity","name":"azure-atlas-platform-observation","entityType":"cluster-fingerprint","observations":["Platform: Azure AKS with Azure PostgreSQL + Atlas schema management","Database pattern: FlexibleServer → FlexibleServerDatabase → AtlasSchema","Schema deployment: Atlas creates dev database pods for schema calculation and application","Database status: my-db-server healthy, both databases operational with applied schemas","Resource organization: Uses db-registry ConfigMaps to track managed resources","Access pattern: Public access enabled, schemas successfully applied with sample data"]}
{"type":"entity","name":"azure-atlas-deletion-workflow","entityType":"deletion-workflow","observations":["Successful YAML-based deletion sequence for Azure PostgreSQL + Atlas","Order: AtlasSchemas → FlexibleServerDatabases → FlexibleServer → ResourceGroup → Secrets","Atlas dev database deployments auto-cleaned when schemas deleted","Azure resources deleted immediately (no stuck deletions)","Connection secrets auto-removed when FlexibleServer deleted","Total deletion time: ~30 seconds for complete cleanup"]}