---
# Ingress for Platform UI with TLS
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: platform-ui-ingress
  namespace: platform-system
  labels:
    app: platform-ui
    platform.io/component: "platform-ui"
    version: v1.1.0
  annotations:
    platform.io/description: "Ingress for Platform UI with TLS termination"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
      add_header X-Download-Options "noopen" always;
      add_header X-Permitted-Cross-Domain-Policies "none" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    # CORS for API calls
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://platform.aks.local"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type, Accept, Origin, User-Agent, DNT, Cache-Control, X-Mx-ReqToken, Keep-Alive, X-Requested-With, If-Modified-Since"
    # Session affinity for better UX
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/session-cookie-name: "platform-ui-affinity"
    nginx.ingress.kubernetes.io/session-cookie-expires: "3600"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "3600"
    nginx.ingress.kubernetes.io/session-cookie-path: "/"
spec:
  tls:
    - hosts:
        - platform.aks.local
      secretName: platform-ui-tls-cert
  rules:
    - host: platform.aks.local
      http:
        paths:
          # Health check path
          - path: /health
            pathType: Exact
            backend:
              service:
                name: platform-ui
                port:
                  number: 80
          # API proxy paths (route to platform-api)
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: platform-api
                port:
                  number: 80
          # WebSocket path (route to platform-api)
          - path: /ws
            pathType: Prefix
            backend:
              service:
                name: platform-api
                port:
                  number: 80
          # Main UI path (catch-all)
          - path: /
            pathType: Prefix
            backend:
              service:
                name: platform-ui
                port:
                  number: 80

---
# Certificate for TLS (using cert-manager)
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: platform-ui-tls-cert
  namespace: platform-system
  labels:
    app: platform-ui
    platform.io/component: "platform-ui"
    version: v1.1.0
  annotations:
    platform.io/description: "TLS certificate for Platform UI"
spec:
  secretName: platform-ui-tls-cert
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - platform.aks.local
  usages:
    - digital signature
    - key encipherment
