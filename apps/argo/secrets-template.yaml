# This file serves as a template for the required secrets
# These secrets should be created via External Secrets Operator from Azure Key Vault
# DO NOT commit actual secret values to Git

---
# Azure Workload Identity Secret
# Should be created by External Secrets Operator
apiVersion: v1
kind: Secret
metadata:
  name: azure-workload-identity
  namespace: argo
  labels:
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/component: authentication
    managed-by: external-secrets
type: Opaque
data:
  # These values should be populated from Azure Key Vault
  client-id: <base64-encoded-azure-client-id>
  tenant-id: <base64-encoded-azure-tenant-id>

---
# Platform API Token Secret
apiVersion: v1
kind: Secret
metadata:
  name: platform-api-token
  namespace: argo
  labels:
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/component: platform-integration
    managed-by: external-secrets
type: Opaque
data:
  # JWT token for Platform API authentication
  token: <base64-encoded-platform-api-jwt-token>

---
# Argo Server TLS Certificate
apiVersion: v1
kind: Secret
metadata:
  name: argo-server-tls
  namespace: argo
  labels:
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/component: argo-server
    managed-by: cert-manager
type: kubernetes.io/tls
data:
  # TLS certificate and key for Argo Server HTTPS
  tls.crt: <base64-encoded-certificate>
  tls.key: <base64-encoded-private-key>

---
# SSO Configuration Secret (Optional - for Azure AD integration)
apiVersion: v1
kind: Secret
metadata:
  name: argo-server-sso
  namespace: argo
  labels:
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/component: authentication
    managed-by: external-secrets
type: Opaque
data:
  # Azure AD application credentials for SSO
  client-id: <base64-encoded-azure-ad-client-id>
  client-secret: <base64-encoded-azure-ad-client-secret>

---
# Azure Storage Secret (for workflow artifacts)
apiVersion: v1
kind: Secret
metadata:
  name: azure-storage-secret
  namespace: argo
  labels:
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/component: artifact-repository
    managed-by: external-secrets
type: Opaque
data:
  # Azure Storage Account credentials
  accountKey: <base64-encoded-storage-account-key>

---
# PostgreSQL Connection Secret (Optional - for workflow persistence)
apiVersion: v1
kind: Secret
metadata:
  name: argo-postgres-config
  namespace: argo
  labels:
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/component: persistence
    managed-by: external-secrets
type: Opaque
data:
  # PostgreSQL connection credentials
  username: <base64-encoded-postgres-username>
  password: <base64-encoded-postgres-password>

---
# Example External Secrets Configuration
# This would be deployed separately to sync secrets from Azure Key Vault
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: azure-keyvault-store
  namespace: argo
spec:
  provider:
    azurekv:
      tenantId: "${AZURE_TENANT_ID}"
      vaultUrl: "https://${AZURE_KEYVAULT_NAME}.vault.azure.net/"
      authSecretRef:
        clientId:
          name: azure-workload-identity
          key: client-id
        clientSecret:
          name: azure-workload-identity
          key: client-secret

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argo-workflows-secrets
  namespace: argo
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: azure-keyvault-store
    kind: SecretStore
  target:
    name: azure-workload-identity
    creationPolicy: Owner
  data:
    - secretKey: client-id
      remoteRef:
        key: argo-workflows-client-id
    - secretKey: tenant-id
      remoteRef:
        key: azure-tenant-id
