---
# Flux Health Checks for Istio Components
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: istio-health-checks
  namespace: flux-system
  labels:
    deployment-agent: istio-engineer
spec:
  interval: 5m
  sourceRef:
    kind: GitRepository
    name: istio-apps
  path: "./istio-apps"
  prune: true
  wait: true
  timeout: 10m
  
  # Health checks for critical Istio resources
  healthChecks:
    # Gateway readiness
    - apiVersion: networking.istio.io/v1beta1
      kind: Gateway
      name: main-gateway
      namespace: aks-istio-system
    
    # VirtualServices health
    - apiVersion: networking.istio.io/v1beta1
      kind: VirtualService
      name: tenant-a-podinfo
      namespace: tenant-a
    
    - apiVersion: networking.istio.io/v1beta1
      kind: VirtualService
      name: tenant-b-podinfo
      namespace: tenant-b
    
    # Application deployments
    - apiVersion: apps/v1
      kind: Deployment
      name: podinfo-v1
      namespace: tenant-a
    
    - apiVersion: apps/v1
      kind: Deployment
      name: podinfo-v2
      namespace: tenant-a

  # Dependency on Istio system being ready
  dependsOn:
    - name: istio-system
      namespace: flux-system

---
# Flux Notification for GitOps events
apiVersion: notification.toolkit.fluxcd.io/v1beta1
kind: Provider
metadata:
  name: istio-slack-notifications
  namespace: flux-system
spec:
  type: slack
  channel: '#istio-deployments'
  secretRef:
    name: slack-webhook-secret

---
# Alert for deployment failures
apiVersion: notification.toolkit.fluxcd.io/v1beta1
kind: Alert
metadata:
  name: istio-deployment-alerts
  namespace: flux-system
spec:
  providerRef:
    name: istio-slack-notifications
  eventSeverity: error
  eventSources:
    - kind: Kustomization
      name: istio-health-checks
    - kind: Kustomization
      name: istio-apps
  summary: "Istio deployment failed in {{ .InvolvedObject.name }}"

---
# Readiness Gates for Progressive Deployment
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: tenant-a-podinfo-canary
  namespace: tenant-a
  labels:
    deployment-agent: istio-engineer
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: podinfo-v1
  progressDeadlineSeconds: 600
  
  service:
    port: 9898
    targetPort: 9898
    gateways:
      - aks-istio-system/main-gateway
    hosts:
      - podinfo.tenant-a.davidmarkgardiner.co.uk
  
  analysis:
    interval: 30s
    threshold: 5
    maxWeight: 10
    stepWeight: 2
    
    # Health check gates
    metrics:
      - name: request-success-rate
        thresholdRange:
          min: 99
        interval: 30s
      
      - name: request-duration
        thresholdRange:
          max: 500
        interval: 30s
      
      - name: error-rate
        thresholdRange:
          max: 1
        interval: 30s
    
    # Pre-deployment validation
    webhooks:
      - name: istio-proxy-check
        type: pre-rollout
        url: http://flagger-loadtester.istio-testing/
        timeout: 10s
        metadata:
          type: bash
          cmd: "kubectl get pods -n tenant-a -l version=canary --field-selector=status.phase=Running | wc -l | grep -q '^[1-9]'"
      
      - name: security-policy-validation  
        type: pre-rollout
        url: http://policy-validator.shared-services/validate
        timeout: 15s

---
# Resource Quotas for GitOps Safety
apiVersion: v1
kind: ResourceQuota
metadata:
  name: tenant-a-gitops-limits
  namespace: tenant-a
  labels:
    managed-by: flux
    deployment-agent: istio-engineer
spec:
  hard:
    requests.cpu: "2"
    requests.memory: 4Gi
    limits.cpu: "4" 
    limits.memory: 8Gi
    pods: "20"
    persistentvolumeclaims: "5"
    services: "10"
    secrets: "10"
    configmaps: "20"

---
# NetworkPolicy for GitOps isolation
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tenant-a-gitops-isolation
  namespace: tenant-a
  labels:
    managed-by: flux
    deployment-agent: istio-engineer
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow Istio system traffic
  - from:
    - namespaceSelector:
        matchLabels:
          name: aks-istio-system
  # Allow same namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: tenant-a
  # Allow monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: shared-services
    ports:
    - protocol: TCP
      port: 15090  # Envoy admin
  egress:
  # Allow DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow Istio control plane
  - to:
    - namespaceSelector:
        matchLabels:
          name: aks-istio-system
  # Allow external services via Istio
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP  
      port: 80