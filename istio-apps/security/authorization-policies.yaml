---
# Tenant A Authorization Policy - Strict production security
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: tenant-a-security
  namespace: tenant-a
  labels:
    istio-component: authorizationpolicy
    deployment-agent: istio-engineer
    test-scenario: production-security
    tenant: tenant-a
spec:
  action: ALLOW
  rules:
  # Allow ingress gateway traffic
  - from:
    - source:
        namespaces: ["aks-istio-system"]
        principals: ["cluster.local/ns/aks-istio-system/sa/aks-istio-ingressgateway-internal-service-account"]
    to:
    - operation:
        methods: ["GET", "POST"]
        paths: ["/", "/healthz", "/readyz", "/metrics"]
  # Allow same-namespace traffic
  - from:
    - source:
        namespaces: ["tenant-a"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE"]
  # Allow shared services (monitoring)
  - from:
    - source:
        namespaces: ["shared-services"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/metrics", "/healthz", "/readyz"]
  # Allow specific service accounts from shared services
  - from:
    - source:
        principals: ["cluster.local/ns/shared-services/sa/prometheus"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/metrics"]
  # Deny all other traffic by default (implicit)
---
# Tenant B Authorization Policy - Relaxed development security
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: tenant-b-security
  namespace: tenant-b
  labels:
    istio-component: authorizationpolicy
    deployment-agent: istio-engineer
    test-scenario: development-security
    tenant: tenant-b
spec:
  action: ALLOW
  rules:
  # Allow ingress gateway traffic
  - from:
    - source:
        namespaces: ["aks-istio-system"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE"]
  # Allow same-namespace traffic
  - from:
    - source:
        namespaces: ["tenant-b"]
  # Allow shared services
  - from:
    - source:
        namespaces: ["shared-services"]
    to:
    - operation:
        methods: ["GET", "POST"]
  # Allow testing namespace for development
  - from:
    - source:
        namespaces: ["istio-testing"]
    to:
    - operation:
        methods: ["GET", "POST"]
  # Allow limited cross-tenant access for development
  - from:
    - source:
        namespaces: ["tenant-a"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/", "/healthz"]
---
# Shared Services Authorization Policy - Infrastructure access
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: shared-services-security
  namespace: shared-services
  labels:
    istio-component: authorizationpolicy
    deployment-agent: istio-engineer
    test-scenario: infrastructure-security
    tenant: shared
spec:
  action: ALLOW
  rules:
  # Allow ingress gateway for monitoring UIs
  - from:
    - source:
        namespaces: ["aks-istio-system"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/", "/api/*", "/prometheus/*", "/grafana/*", "/jaeger/*"]
  # Allow all tenant namespaces to access metrics collection
  - from:
    - source:
        namespaces: ["tenant-a", "tenant-b", "istio-testing"]
    to:
    - operation:
        methods: ["GET", "POST"]
        paths: ["/api/v1/write", "/api/prom/push", "/api/traces"]
  # Allow same-namespace communication
  - from:
    - source:
        namespaces: ["shared-services"]
  # Allow Istio system to scrape metrics
  - from:
    - source:
        namespaces: ["aks-istio-system"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/stats/prometheus"]
---
# External Services Authorization Policy - Gateway security
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: external-services-security
  namespace: external-services
  labels:
    istio-component: authorizationpolicy
    deployment-agent: istio-engineer
    test-scenario: external-gateway-security
    tenant: external
spec:
  action: ALLOW
  rules:
  # Allow all tenant namespaces to use external services
  - from:
    - source:
        namespaces: ["tenant-a", "tenant-b", "shared-services", "istio-testing"]
  # Allow same-namespace communication
  - from:
    - source:
        namespaces: ["external-services"]
---
# Testing Authorization Policy - Permissive for chaos engineering
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: testing-security
  namespace: istio-testing
  labels:
    istio-component: authorizationpolicy
    deployment-agent: istio-engineer
    test-scenario: testing-permissive
    tenant: testing
spec:
  action: ALLOW
  rules:
  # Allow ingress gateway
  - from:
    - source:
        namespaces: ["aks-istio-system"]
  # Allow all tenant namespaces for testing
  - from:
    - source:
        namespaces: ["tenant-a", "tenant-b", "shared-services", "external-services"]
  # Allow same-namespace
  - from:
    - source:
        namespaces: ["istio-testing"]
---
# Global Istio System Authorization Policy
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: istio-system-security
  namespace: aks-istio-system
  labels:
    istio-component: authorizationpolicy
    deployment-agent: istio-engineer
    test-scenario: istio-system-security
spec:
  action: ALLOW
  rules:
  # Allow ingress gateway to access all namespaces
  - from:
    - source:
        namespaces: ["aks-istio-system"]
  # Allow all namespaces to communicate with Istio control plane
  - to:
    - operation:
        methods: ["GET", "POST"]
        paths: ["/stats/*", "/ready", "/version"]
---
# Deny Policy Example - Block specific patterns
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: deny-admin-paths
  namespace: tenant-a
  labels:
    istio-component: authorizationpolicy
    deployment-agent: istio-engineer
    test-scenario: deny-admin-access
    tenant: tenant-a
spec:
  action: DENY
  rules:
  # Deny access to admin endpoints from external sources
  - from:
    - source:
        notNamespaces: ["tenant-a", "shared-services"]
    to:
    - operation:
        paths: ["/admin/*", "/debug/*", "/internal/*"]
  # Deny specific HTTP methods for production safety
  - to:
    - operation:
        methods: ["TRACE", "CONNECT"]
---
# Rate Limiting Authorization Policy (requires Envoy rate limit filter)
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: rate-limit-policy
  namespace: tenant-a
  labels:
    istio-component: authorizationpolicy
    deployment-agent: istio-engineer
    test-scenario: rate-limiting
    tenant: tenant-a
spec:
  action: CUSTOM
  provider:
    name: envoy-ratelimit
  rules:
  # Apply rate limiting to external traffic
  - from:
    - source:
        namespaces: ["aks-istio-system"]
    to:
    - operation:
        methods: ["GET", "POST"]
        paths: ["/api/*"]