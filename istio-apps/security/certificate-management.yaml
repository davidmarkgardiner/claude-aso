---
# Root CA Certificate Management
apiVersion: v1
kind: Secret
metadata:
  name: cacerts
  namespace: aks-istio-system
  labels:
    deployment-agent: istio-engineer
    security-component: root-ca
type: Opaque
data:
  # These would be generated by your PKI system - using valid placeholder base64 values
  root-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K # pragma: allowlist secret
  cert-chain.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K # pragma: allowlist secret
  ca-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K # pragma: allowlist secret
  ca-key.pem: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K # pragma: allowlist secret

---
# Intermediate CA for tenant-specific certificates
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: istio-ca-issuer
  labels:
    deployment-agent: istio-engineer
    security-component: ca-issuer
spec:
  ca:
    secretName: cacerts

---
# Workload Certificate Template
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: workload-cert-template
  namespace: tenant-a
  labels:
    deployment-agent: istio-engineer
    security-component: workload-cert
spec:
  secretName: workload-tls-cert
  issuerRef:
    name: istio-ca-issuer
    kind: ClusterIssuer
  commonName: podinfo.tenant-a.cluster.local
  dnsNames:
  - podinfo.tenant-a.cluster.local
  - podinfo.tenant-a.svc.cluster.local
  duration: 8760h  # 1 year
  renewBefore: 720h # 30 days before expiry
  
---
# Certificate Rotation Policy
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: certificate-rotation-policy
  namespace: istio-system
  labels:
    deployment-agent: istio-engineer
    security-component: cert-rotation
spec:
  mtls:
    mode: STRICT
  # Envoy will automatically rotate certificates based on cert-manager
  
---
# SPIFFE/SPIRE Integration for Enhanced Identity
apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-server-config
  namespace: spire
  labels:
    deployment-agent: istio-engineer
    security-component: spire-config
data:
  server.conf: |
    server {
      bind_address = "0.0.0.0"
      bind_port = "8081"
      trust_domain = "davidmarkgardiner.co.uk"
      data_dir = "/run/spire/data"
      log_level = "INFO"
      ca_subject = {
        country = ["UK"],
        organization = ["Istio Service Mesh"],
        common_name = "SPIRE Server CA",
      }
    }
    
    plugins {
      DataStore "sql" {
        plugin_data {
          database_type = "sqlite3"
          connection_string = "/run/spire/data/datastore.sqlite3"
        }
      }
      
      NodeAttestor "k8s_psat" {
        plugin_data {
          clusters = {
            "aks-cluster" = {
              service_account_allow_list = ["spire:spire-agent"]
            }
          }
        }
      }
      
      KeyManager "disk" {
        plugin_data {
          keys_path = "/run/spire/data/keys.json"
        }
      }
      
      Notifier "k8sbundle" {
        plugin_data {
          namespace = "spire"
          config_map = "trust-bundle"
        }
      }
    }

---
# Falco Runtime Security Integration
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: falco-istio-security
  namespace: kube-system
  labels:
    deployment-agent: istio-engineer
    security-component: runtime-security
spec:
  selector:
    matchLabels:
      app: falco-istio
  template:
    metadata:
      labels:
        app: falco-istio
    spec:
      serviceAccount: falco
      hostNetwork: true
      hostPID: true
      containers:
      - name: falco
        image: falcosecurity/falco:0.36.2
        args:
        - /usr/bin/falco
        - --k8s-api
        - --k8s-api-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - --k8s-api-token=/var/run/secrets/kubernetes.io/serviceaccount/token
        securityContext:
          privileged: true
        volumeMounts:
        - name: dev-fs
          mountPath: /host/dev
        - name: proc-fs
          mountPath: /host/proc
        - name: boot-fs
          mountPath: /host/boot
        - name: modules
          mountPath: /host/lib/modules
        - name: usr-fs
          mountPath: /host/usr
        - name: etc-fs
          mountPath: /host/etc
        - name: falco-config
          mountPath: /etc/falco
      volumes:
      - name: dev-fs
        hostPath:
          path: /dev
      - name: proc-fs
        hostPath:
          path: /proc
      - name: boot-fs
        hostPath:
          path: /boot
      - name: modules
        hostPath:
          path: /lib/modules
      - name: usr-fs
        hostPath:
          path: /usr
      - name: etc-fs
        hostPath:
          path: /etc
      - name: falco-config
        configMap:
          name: falco-istio-rules

# ---
# # External Secret Management Integration
# # Commented out - requires external-secrets operator to be installed first
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: istio-secrets
#   namespace: aks-istio-system
#   labels:
#     deployment-agent: istio-engineer
#     security-component: external-secrets
# spec:
#   refreshInterval: 1h
#   secretStoreRef:
#     name: azure-keyvault-store
#     kind: SecretStore
#   target:
#     name: istio-tls-certificates
#     creationPolicy: Owner
#   data:
#   - secretKey: tls.crt
#     remoteRef:
#       key: istio-gateway-cert
#   - secretKey: tls.key
#     remoteRef:
#       key: istio-gateway-key