---
# Prometheus Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: shared-services
  labels:
    app: prometheus
    component: monitoring
    deployment-agent: istio-engineer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
        component: monitoring
      annotations:
        sidecar.istio.io/inject: "true"
        prometheus.io/scrape: "false"  # Don't scrape self
    spec:
      serviceAccountName: istio-shared-services
      containers:
      - name: prometheus
        image: prom/prometheus:v2.48.0
        args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus/
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --web.console.templates=/etc/prometheus/consoles
        - --web.enable-lifecycle
        - --web.enable-admin-api
        - --storage.tsdb.retention.time=7d
        ports:
        - name: web
          containerPort: 9090
        resources:
          requests:
            memory: "512Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/
        - name: prometheus-storage
          mountPath: /prometheus/
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: web
          initialDelaySeconds: 30
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /-/ready
            port: web
          initialDelaySeconds: 30
          timeoutSeconds: 30
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        emptyDir: {}
---
# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: shared-services
  labels:
    app: prometheus
    component: monitoring
    deployment-agent: istio-engineer
spec:
  ports:
  - name: web
    port: 9090
    targetPort: web
  selector:
    app: prometheus
---
# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: shared-services
  labels:
    app: grafana
    component: monitoring
    deployment-agent: istio-engineer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        component: monitoring
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: istio-shared-services
      containers:
      - name: grafana
        image: grafana/grafana:10.2.0
        ports:
        - name: grafana
          containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: admin123  # Change in production
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_SERVER_ROOT_URL
          value: "http://monitoring.shared-services.davidmarkgardiner.co.uk/grafana"
        - name: GF_SERVER_SERVE_FROM_SUB_PATH
          value: "true"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-dashboards
          mountPath: /etc/grafana/provisioning/dashboards
        livenessProbe:
          httpGet:
            path: /api/health
            port: grafana
          initialDelaySeconds: 60
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: grafana
          initialDelaySeconds: 30
          timeoutSeconds: 30
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards
---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: shared-services
  labels:
    app: grafana
    component: monitoring
    deployment-agent: istio-engineer
spec:
  ports:
  - name: grafana
    port: 3000
    targetPort: grafana
  selector:
    app: grafana