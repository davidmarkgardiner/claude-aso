---
# Jaeger All-in-One Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: shared-services
  labels:
    app: jaeger
    component: tracing
    deployment-agent: istio-engineer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
        component: tracing
      annotations:
        sidecar.istio.io/inject: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "14269"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: istio-shared-services
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.51
        args:
        - --memory.max-traces=50000
        - --log-level=info
        - --admin.http.host-port=0.0.0.0:14269
        ports:
        - name: query-http
          containerPort: 16686
          protocol: TCP
        - name: admin-http
          containerPort: 14269
          protocol: TCP
        - name: jaeger-thrift
          containerPort: 14268
          protocol: TCP
        - name: jaeger-grpc
          containerPort: 14250
          protocol: TCP
        - name: zipkin-http
          containerPort: 9411
          protocol: TCP
        env:
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: ":9411"
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: admin-http
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /
            port: admin-http
          initialDelaySeconds: 30
          periodSeconds: 15
---
# Jaeger Query Service
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: shared-services
  labels:
    app: jaeger
    component: query
    deployment-agent: istio-engineer
spec:
  ports:
  - name: query-http
    port: 16686
    targetPort: query-http
    protocol: TCP
  selector:
    app: jaeger
---
# Jaeger Collector Service
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: shared-services
  labels:
    app: jaeger
    component: collector
    deployment-agent: istio-engineer
spec:
  ports:
  - name: jaeger-thrift
    port: 14268
    targetPort: jaeger-thrift
    protocol: TCP
  - name: jaeger-grpc
    port: 14250
    targetPort: jaeger-grpc
    protocol: TCP
  - name: zipkin-http
    port: 9411
    targetPort: zipkin-http
    protocol: TCP
  selector:
    app: jaeger
---
# Jaeger Admin Service
apiVersion: v1
kind: Service
metadata:
  name: jaeger-admin
  namespace: shared-services
  labels:
    app: jaeger
    component: admin
    deployment-agent: istio-engineer
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "14269"
    prometheus.io/path: "/metrics"
spec:
  ports:
  - name: admin-http
    port: 14269
    targetPort: admin-http
    protocol: TCP
  selector:
    app: jaeger